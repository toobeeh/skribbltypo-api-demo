/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ThemeMetaDto
 */
export interface ThemeMetaDto {
    /**
     * Name of the theme creator
     * @type {string}
     * @memberof ThemeMetaDto
     */
    author: string;
    /**
     * Unix epoch ms representing the creation date
     * @type {number}
     * @memberof ThemeMetaDto
     */
    created: number;
    /**
     * Item type
     * @type {string}
     * @memberof ThemeMetaDto
     */
    type: string;
    /**
     * Local item id
     * @type {number}
     * @memberof ThemeMetaDto
     */
    id: number;
    /**
     * Name of the theme
     * @type {string}
     * @memberof ThemeMetaDto
     */
    name: string;
}

/**
 * Check if a given object implements the ThemeMetaDto interface.
 */
export function instanceOfThemeMetaDto(value: object): value is ThemeMetaDto {
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('created' in value) || value['created'] === undefined) return false;
    if (!('type' in value) || value['type'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    return true;
}

export function ThemeMetaDtoFromJSON(json: any): ThemeMetaDto {
    return ThemeMetaDtoFromJSONTyped(json, false);
}

export function ThemeMetaDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ThemeMetaDto {
    if (json == null) {
        return json;
    }
    return {
        
        'author': json['author'],
        'created': json['created'],
        'type': json['type'],
        'id': json['id'],
        'name': json['name'],
    };
}

export function ThemeMetaDtoToJSON(value?: ThemeMetaDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'author': value['author'],
        'created': value['created'],
        'type': value['type'],
        'id': value['id'],
        'name': value['name'],
    };
}

