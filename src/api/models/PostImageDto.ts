/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PostImageDto
 */
export interface PostImageDto {
    /**
     * Image title
     * @type {string}
     * @memberof PostImageDto
     */
    title: string;
    /**
     * Image author
     * @type {string}
     * @memberof PostImageDto
     */
    author: string;
    /**
     * Image poster name
     * @type {string}
     * @memberof PostImageDto
     */
    posterName: string;
    /**
     * Post only image without embed
     * @type {boolean}
     * @memberof PostImageDto
     */
    onlyImage: boolean;
    /**
     * Base64 url representation of the image
     * @type {string}
     * @memberof PostImageDto
     */
    imageBase64: string;
}

/**
 * Check if a given object implements the PostImageDto interface.
 */
export function instanceOfPostImageDto(value: object): value is PostImageDto {
    if (!('title' in value) || value['title'] === undefined) return false;
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('posterName' in value) || value['posterName'] === undefined) return false;
    if (!('onlyImage' in value) || value['onlyImage'] === undefined) return false;
    if (!('imageBase64' in value) || value['imageBase64'] === undefined) return false;
    return true;
}

export function PostImageDtoFromJSON(json: any): PostImageDto {
    return PostImageDtoFromJSONTyped(json, false);
}

export function PostImageDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostImageDto {
    if (json == null) {
        return json;
    }
    return {
        
        'title': json['title'],
        'author': json['author'],
        'posterName': json['posterName'],
        'onlyImage': json['onlyImage'],
        'imageBase64': json['imageBase64'],
    };
}

export function PostImageDtoToJSON(value?: PostImageDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'title': value['title'],
        'author': value['author'],
        'posterName': value['posterName'],
        'onlyImage': value['onlyImage'],
        'imageBase64': value['imageBase64'],
    };
}

