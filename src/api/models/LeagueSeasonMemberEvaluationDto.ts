/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LeagueSeasonMemberEvaluationDto
 */
export interface LeagueSeasonMemberEvaluationDto {
    /**
     * The year of the league season
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    year: number;
    /**
     * The month of the league season
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    month: number;
    /**
     * Sum of the weighted scores of each league drop
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    score: number;
    /**
     * Amount of league drops collected
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    count: number;
    /**
     * The maximum streak of caught league drops
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    maxStreak: number;
    /**
     * The current streak of caught league drops
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    currentStreak: number;
    /**
     * The average catch response time of all caught league drops
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    averageTime: number;
    /**
     * The average of weighted value of all caught league drops
     * @type {number}
     * @memberof LeagueSeasonMemberEvaluationDto
     */
    averageWeight: number;
}

/**
 * Check if a given object implements the LeagueSeasonMemberEvaluationDto interface.
 */
export function instanceOfLeagueSeasonMemberEvaluationDto(value: object): value is LeagueSeasonMemberEvaluationDto {
    if (!('year' in value) || value['year'] === undefined) return false;
    if (!('month' in value) || value['month'] === undefined) return false;
    if (!('score' in value) || value['score'] === undefined) return false;
    if (!('count' in value) || value['count'] === undefined) return false;
    if (!('maxStreak' in value) || value['maxStreak'] === undefined) return false;
    if (!('currentStreak' in value) || value['currentStreak'] === undefined) return false;
    if (!('averageTime' in value) || value['averageTime'] === undefined) return false;
    if (!('averageWeight' in value) || value['averageWeight'] === undefined) return false;
    return true;
}

export function LeagueSeasonMemberEvaluationDtoFromJSON(json: any): LeagueSeasonMemberEvaluationDto {
    return LeagueSeasonMemberEvaluationDtoFromJSONTyped(json, false);
}

export function LeagueSeasonMemberEvaluationDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): LeagueSeasonMemberEvaluationDto {
    if (json == null) {
        return json;
    }
    return {
        
        'year': json['year'],
        'month': json['month'],
        'score': json['score'],
        'count': json['count'],
        'maxStreak': json['maxStreak'],
        'currentStreak': json['currentStreak'],
        'averageTime': json['averageTime'],
        'averageWeight': json['averageWeight'],
    };
}

export function LeagueSeasonMemberEvaluationDtoToJSON(value?: LeagueSeasonMemberEvaluationDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'year': value['year'],
        'month': value['month'],
        'score': value['score'],
        'count': value['count'],
        'maxStreak': value['maxStreak'],
        'currentStreak': value['currentStreak'],
        'averageTime': value['averageTime'],
        'averageWeight': value['averageWeight'],
    };
}

