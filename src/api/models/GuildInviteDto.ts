/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface GuildInviteDto
 */
export interface GuildInviteDto {
    /**
     * Name of the server
     * @type {string}
     * @memberof GuildInviteDto
     */
    name: string;
    /**
     * Palantir connection token of the server
     * @type {number}
     * @memberof GuildInviteDto
     */
    token: number;
    /**
     * Current icon url of the guild
     * @type {string}
     * @memberof GuildInviteDto
     */
    iconUrl: string;
    /**
     * Amount of connected members
     * @type {number}
     * @memberof GuildInviteDto
     */
    connectedMembers: number;
}

/**
 * Check if a given object implements the GuildInviteDto interface.
 */
export function instanceOfGuildInviteDto(value: object): value is GuildInviteDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('token' in value) || value['token'] === undefined) return false;
    if (!('iconUrl' in value) || value['iconUrl'] === undefined) return false;
    if (!('connectedMembers' in value) || value['connectedMembers'] === undefined) return false;
    return true;
}

export function GuildInviteDtoFromJSON(json: any): GuildInviteDto {
    return GuildInviteDtoFromJSONTyped(json, false);
}

export function GuildInviteDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): GuildInviteDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'token': json['token'],
        'iconUrl': json['iconUrl'],
        'connectedMembers': json['connectedMembers'],
    };
}

export function GuildInviteDtoToJSON(value?: GuildInviteDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'token': value['token'],
        'iconUrl': value['iconUrl'],
        'connectedMembers': value['connectedMembers'],
    };
}

