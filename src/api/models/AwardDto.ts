/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AwardDto
 */
export interface AwardDto {
    /**
     * Award name
     * @type {string}
     * @memberof AwardDto
     */
    name: string;
    /**
     * Award unique ID
     * @type {number}
     * @memberof AwardDto
     */
    id: number;
    /**
     * Award description
     * @type {string}
     * @memberof AwardDto
     */
    description: string;
    /**
     * Award icon url
     * @type {string}
     * @memberof AwardDto
     */
    url: string;
    /**
     * Rarity level
     * @type {number}
     * @memberof AwardDto
     */
    rarity: number;
}

/**
 * Check if a given object implements the AwardDto interface.
 */
export function instanceOfAwardDto(value: object): value is AwardDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('description' in value) || value['description'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('rarity' in value) || value['rarity'] === undefined) return false;
    return true;
}

export function AwardDtoFromJSON(json: any): AwardDto {
    return AwardDtoFromJSONTyped(json, false);
}

export function AwardDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): AwardDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'id': json['id'],
        'description': json['description'],
        'url': json['url'],
        'rarity': json['rarity'],
    };
}

export function AwardDtoToJSON(value?: AwardDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'id': value['id'],
        'description': value['description'],
        'url': value['url'],
        'rarity': value['rarity'],
    };
}

