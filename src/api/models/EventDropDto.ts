/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { EventDto } from './EventDto';
import {
    EventDtoFromJSON,
    EventDtoFromJSONTyped,
    EventDtoToJSON,
} from './EventDto';

/**
 * 
 * @export
 * @interface EventDropDto
 */
export interface EventDropDto {
    /**
     * Unique event drop ID
     * @type {number}
     * @memberof EventDropDto
     */
    id: number;
    /**
     * Drop name
     * @type {string}
     * @memberof EventDropDto
     */
    name: string;
    /**
     * Drop URL
     * @type {string}
     * @memberof EventDropDto
     */
    url: string;
    /**
     * Associated event
     * @type {EventDto}
     * @memberof EventDropDto
     */
    event: EventDto;
}

/**
 * Check if a given object implements the EventDropDto interface.
 */
export function instanceOfEventDropDto(value: object): value is EventDropDto {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('url' in value) || value['url'] === undefined) return false;
    if (!('event' in value) || value['event'] === undefined) return false;
    return true;
}

export function EventDropDtoFromJSON(json: any): EventDropDto {
    return EventDropDtoFromJSONTyped(json, false);
}

export function EventDropDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): EventDropDto {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'url': json['url'],
        'event': EventDtoFromJSON(json['event']),
    };
}

export function EventDropDtoToJSON(value?: EventDropDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'id': value['id'],
        'name': value['name'],
        'url': value['url'],
        'event': EventDtoToJSON(value['event']),
    };
}

