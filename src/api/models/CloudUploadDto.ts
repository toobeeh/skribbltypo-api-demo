/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CloudUploadDto
 */
export interface CloudUploadDto {
    /**
     * Image name
     * @type {string}
     * @memberof CloudUploadDto
     */
    name: string;
    /**
     * Image author name
     * @type {string}
     * @memberof CloudUploadDto
     */
    author: string;
    /**
     * Whether the image was created in a private lobby
     * @type {boolean}
     * @memberof CloudUploadDto
     */
    inPrivate: boolean;
    /**
     * If the image author is the cloud owner
     * @type {boolean}
     * @memberof CloudUploadDto
     */
    isOwn: boolean;
    /**
     * Lobby language where the image was created
     * @type {string}
     * @memberof CloudUploadDto
     */
    language: string;
    /**
     * Commands of the image for skribbl recreation
     * @type {Array<Array<string>>}
     * @memberof CloudUploadDto
     */
    commands: Array<Array<string>>;
    /**
     * base64 representation of the image
     * @type {string}
     * @memberof CloudUploadDto
     */
    imageBase64: string;
}

/**
 * Check if a given object implements the CloudUploadDto interface.
 */
export function instanceOfCloudUploadDto(value: object): value is CloudUploadDto {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('author' in value) || value['author'] === undefined) return false;
    if (!('inPrivate' in value) || value['inPrivate'] === undefined) return false;
    if (!('isOwn' in value) || value['isOwn'] === undefined) return false;
    if (!('language' in value) || value['language'] === undefined) return false;
    if (!('commands' in value) || value['commands'] === undefined) return false;
    if (!('imageBase64' in value) || value['imageBase64'] === undefined) return false;
    return true;
}

export function CloudUploadDtoFromJSON(json: any): CloudUploadDto {
    return CloudUploadDtoFromJSONTyped(json, false);
}

export function CloudUploadDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CloudUploadDto {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'author': json['author'],
        'inPrivate': json['inPrivate'],
        'isOwn': json['isOwn'],
        'language': json['language'],
        'commands': json['commands'],
        'imageBase64': json['imageBase64'],
    };
}

export function CloudUploadDtoToJSON(value?: CloudUploadDto | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'author': value['author'],
        'inPrivate': value['inPrivate'],
        'isOwn': value['isOwn'],
        'language': value['language'],
        'commands': value['commands'],
        'imageBase64': value['imageBase64'],
    };
}

