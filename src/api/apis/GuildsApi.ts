/* tslint:disable */
/* eslint-disable */
/**
 * Skribbl Typo API
 * Skribbl Typo API for resources, admin tools and authentification.
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  GuildInviteDto,
  PostImageDto,
} from '../models/index';
import {
    GuildInviteDtoFromJSON,
    GuildInviteDtoToJSON,
    PostImageDtoFromJSON,
    PostImageDtoToJSON,
} from '../models/index';

export interface GetGuildInviteRequest {
    token: number;
}

export interface PostImageToGuildRequest {
    token: number;
    id: string;
    postImageDto: PostImageDto;
}

/**
 * 
 */
export class GuildsApi extends runtime.BaseAPI {

    /**
     *   Required Role: None  Rate limit default: 10 Requests / 60000 ms TTL
     * Get invite information of a guild
     */
    async getGuildInviteRaw(requestParameters: GetGuildInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<GuildInviteDto>> {
        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling getGuildInvite().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        const response = await this.request({
            path: `/guilds/{token}/invite`.replace(`{${"token"}}`, encodeURIComponent(String(requestParameters['token']))),
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => GuildInviteDtoFromJSON(jsonValue));
    }

    /**
     *   Required Role: None  Rate limit default: 10 Requests / 60000 ms TTL
     * Get invite information of a guild
     */
    async getGuildInvite(requestParameters: GetGuildInviteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<GuildInviteDto> {
        const response = await this.getGuildInviteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     *   Required Role: Member  Rate limit default: 10 Requests / 600000 ms TTL
     * Post an image to a guild channel
     */
    async postImageToGuildRaw(requestParameters: PostImageToGuildRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<void>> {
        if (requestParameters['token'] == null) {
            throw new runtime.RequiredError(
                'token',
                'Required parameter "token" was null or undefined when calling postImageToGuild().'
            );
        }

        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling postImageToGuild().'
            );
        }

        if (requestParameters['postImageDto'] == null) {
            throw new runtime.RequiredError(
                'postImageDto',
                'Required parameter "postImageDto" was null or undefined when calling postImageToGuild().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }
        const response = await this.request({
            path: `/guilds/{token}/imagepost/{id}`.replace(`{${"token"}}`, encodeURIComponent(String(requestParameters['token']))).replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id']))),
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: PostImageDtoToJSON(requestParameters['postImageDto']),
        }, initOverrides);

        return new runtime.VoidApiResponse(response);
    }

    /**
     *   Required Role: Member  Rate limit default: 10 Requests / 600000 ms TTL
     * Post an image to a guild channel
     */
    async postImageToGuild(requestParameters: PostImageToGuildRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<void> {
        await this.postImageToGuildRaw(requestParameters, initOverrides);
    }

}
